pie.sales = c(.12, .3, .26, .16, .04, .12)
names(pie.sales) <- c("Blueberry", "Cherry",
+                     "Apple", "Boston Cream", "Other", "Vanilla Cream")
names(pie.sales) <- c("Blueberry", "Cherry",
"Apple", "Boston Cream", "Other", "Vanilla Cream")
names(pie.sales) <- c("Blueberry", "Cherry","Apple", "Boston Cream", "Other", "Vanilla Cream")
pie(pie.sales)
pie(pie.sales, c("red", "green", "orange", "yellow", "white", "violet"))
demo(graphics)
pie(pie.sales, c("red", "blue", "orange", "yellow", "white", "violet"))
pie(pie.sales, col=c("red", "blue", "orange", "yellow", "white", "violet"))
pie(pie.sales, col=c("red", "blue", "orange", "yellow", "white", "violet2"))
pie(pie.sales, col=c("red", "blue", "orange", "yellow", "white", "violet1"))
pie(pie.sales, col=c("red", "blue", "orange", "yellow", "white", "pink"))
pie(pie.sales, col=c("red", "blue", "orange", "yellow", "white", "pink"))
pie(pie.sales, col=c("red", "blue", "orange", "yellow", "white", "pink"))
pie(pie.sales, col=c("red", "blue", "orange", "yellow", "white", "pink"))
plot(pie.sales)
demo(graphics)
par(opar)
plot(x)
x
demo(plot)
bar(x)
graph(x)
hist(x)
iris(x)
xx
x
xx
xx
xxx
xx
hist(xx)
plot(xx)
duration.freq
duration = faithful$eruptions
breaks = seq(1.5, 5.5, by=.5)
duration.cut = cut(duration, breaks, right=FALSE)
duration.freq = table(duration.cut)
duration.relfreq = duration.freq/nrow(faithful)
duration.cumfreq = cumsum(duration.freq)
duration.cumfreq = cumsum(duration.freq)/nrow(faithful)
duration.cumfreq = cumsum(duration.freq)
duration.cumrelfreq = duration.cumfreq/nrow(faithful)
cumrelfreq0 = c(0, duration.cumrelfreq)
plot(breaks, cumrelfreq0, main="OFE", xlab="duration (in minutes)",
ylab="Cumulative eruption proportion")
lines(breaks, cumrelfreq0)
lines(breaks, cumrelfreq0, col="red")
Fn = ecdf(duration)
plot(fn)
plot(Fn)
stem(duration)
stem(faithful$waiting)
stem(waiting = faithful$waiting)
waiting = faithful$waiting
waitin
waiting
plot(duration, waiting)
lm(duration ~ waiting)
abline(lm(duration ~ waiting))
abline(lm(waiting ~ duration))
lm(waiting ~ duration))
lm(waiting ~ duration)
homicides <- readLines("homicides.txt")
setwd("~/GitHub/Programming/R")
homicides <- readLines("homicides.txt")
fix(homicides)
fix(homicides)
source('~/GitHub/Programming/R/count.R')
count("other")
cause = NULL
cause
length(cause)
source('~/GitHub/Programming/R/count.R')
source('~/GitHub/Programming/R/count.R')
count("other")
source('~/GitHub/Programming/R/count.R')
count("other")
source('~/GitHub/Programming/R/count.R')
count("other")
count("unknown")
submit()
source('~/GitHub/Programming/R/submitscript.R')
submit()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript4.R")
submit
submit()
submit()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript4.R")
submit()
submit()
submit()
homicides <- readLines("homicides.txt")
fix(homicides)
fix(homicides)
source('~/GitHub/Programming/R/agecount.R')
agecount(3)
agecount(21)
agecount(3)
source('~/GitHub/Programming/R/agecount.R')
agecount(3)
agecount(21)
fix(homicides)
source('~/GitHub/Programming/R/agecount.R')
agecount(3)
agecount(21)
source('~/GitHub/Programming/R/agecount.R')
agecount(21)
submit()
submit()
submit()
