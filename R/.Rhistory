pie.sales = c(.12, .3, .26, .16, .04, .12)
names(pie.sales) <- c("Blueberry", "Cherry",
+                     "Apple", "Boston Cream", "Other", "Vanilla Cream")
names(pie.sales) <- c("Blueberry", "Cherry",
"Apple", "Boston Cream", "Other", "Vanilla Cream")
names(pie.sales) <- c("Blueberry", "Cherry","Apple", "Boston Cream", "Other", "Vanilla Cream")
pie(pie.sales)
pie(pie.sales, c("red", "green", "orange", "yellow", "white", "violet"))
demo(graphics)
pie(pie.sales, c("red", "blue", "orange", "yellow", "white", "violet"))
pie(pie.sales, col=c("red", "blue", "orange", "yellow", "white", "violet"))
pie(pie.sales, col=c("red", "blue", "orange", "yellow", "white", "violet2"))
pie(pie.sales, col=c("red", "blue", "orange", "yellow", "white", "violet1"))
pie(pie.sales, col=c("red", "blue", "orange", "yellow", "white", "pink"))
pie(pie.sales, col=c("red", "blue", "orange", "yellow", "white", "pink"))
pie(pie.sales, col=c("red", "blue", "orange", "yellow", "white", "pink"))
pie(pie.sales, col=c("red", "blue", "orange", "yellow", "white", "pink"))
plot(pie.sales)
demo(graphics)
par(opar)
plot(x)
x
demo(plot)
bar(x)
graph(x)
hist(x)
iris(x)
xx
x
xx
xx
xxx
xx
hist(xx)
plot(xx)
duration.freq
duration = faithful$eruptions
breaks = seq(1.5, 5.5, by=.5)
duration.cut = cut(duration, breaks, right=FALSE)
duration.freq = table(duration.cut)
duration.relfreq = duration.freq/nrow(faithful)
duration.cumfreq = cumsum(duration.freq)
duration.cumfreq = cumsum(duration.freq)/nrow(faithful)
duration.cumfreq = cumsum(duration.freq)
duration.cumrelfreq = duration.cumfreq/nrow(faithful)
cumrelfreq0 = c(0, duration.cumrelfreq)
plot(breaks, cumrelfreq0, main="OFE", xlab="duration (in minutes)",
ylab="Cumulative eruption proportion")
lines(breaks, cumrelfreq0)
lines(breaks, cumrelfreq0, col="red")
Fn = ecdf(duration)
plot(fn)
plot(Fn)
stem(duration)
stem(faithful$waiting)
stem(waiting = faithful$waiting)
waiting = faithful$waiting
waitin
waiting
plot(duration, waiting)
lm(duration ~ waiting)
abline(lm(duration ~ waiting))
abline(lm(waiting ~ duration))
lm(waiting ~ duration))
lm(waiting ~ duration)
source('submitscript.R')
setwd("~/GitHub/Programming/R")
source('submitscript.R')
submit()
outcome1 = read.csv("outcome-of-care-measures.csv",
colClasses="character")
diseaseCol = 0
outcome1[, 11] <- as.numeric(outcome1[, 11])
outcome1[, 17] <- as.numeric(outcome1[, 17])
outcome1[, 23] <- as.numeric(outcome1[, 23])
state1 = outcome1[which(outcome1$State == "NC"),]
View(state1)
state1 = state1[,c(2, 11)]
View(state1)
state1=state1[complete.cases(state1)]
state1=state1[complete.cases(state1),]
View(state1)
source('~/GitHub/Programming/R/rankhospital.R')
source('~/GitHub/Programming/R/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", 5000)
state1 = state1[orderstate1$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
state1 = state1[order(state1$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
View(state1)
submit()
rankhospital("NC", "heart attack", "worst")
View(state1)
submit()
source("submitscript.R")
submit()
outcomes = c('heart attack', 'heart failure', 'pneumonia')
outcome1[, 11] <- as.numeric(outcome1[, 11])
outcome1 = read.csv("outcome-of-care-measures.csv",
colClasses="character")
outcome1[, 11] <- as.numeric(outcome1[, 11])
outcome1[, 17] <- as.numeric(outcome1[, 17])
outcome1[, 23] <- as.numeric(outcome1[, 23])
diseaseCol = 11
state1 = outcome1[which(outcome1$State == 'NC'),]
state1 = state1[order(state1$Hospital.Name),]
state1 = state1[order(state1$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
state1 = state1[,c(2,diseaseCol)]
num = nrow(state1)
hos = state1[num,]
hos$Hospital.Name
View(state1)
source('~/GitHub/Programming/R/rankhospital.R')
submit()
source('~/GitHub/Programming/R/rankhospital.R')
submit()
state1=state1[complete.cases(state1),]
source('~/GitHub/Programming/R/rankhospital.R')
source('~/GitHub/Programming/R/rankhospital.R')
submit()
submit()
submit()
submit()
rm(hos)
rm(state1)
View(outcome1)
factors(outcome1$State)
factor(outcome1$State)
x = factor(outcome1$State)
x
fix(x)
state = c("AK",
"AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU",
"HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME",
"MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM",
"NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN",
"TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY")
fix(state)
foreach(s in state){}
foreach(state){}
for(state)
for(i=1;state[i];i++){}
for(i in state){}
for(i in state)
{}
state
for(i in state)
{
source('~/GitHub/Programming/R/rankhospital1.R')
}
for(i in state)
{}
for(i in state)
{
}
asdf = c()
hospital = c()
state = c()
state = c("AK",
"AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU",
"HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME",
"MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM",
"NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN",
"TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY")
states = c()
for(i in state){
}
source('~/GitHub/Programming/R/rankall.R')
source('~/GitHub/Programming/R/rankall.R')
rankall('heart attack')
x=rankall('heart attack')
x
x$state
fix(x)
source('~/GitHub/Programming/R/rankhospital1.R')
x=rankall('heart attack')
x
y=data.frame(x)
y
y=data.frame(rbind(x))
y
y = y + data.frame(rbind(x))
y
y = y + data.frame(rbind(y))
y = y + data.frame(rbind(y))
y
x=rankall('heart attack')
x
x$hospital
source('~/GitHub/Programming/R/rankhospital1.R')
x=rankall('heart attack')
x
x$state
source('~/GitHub/Programming/R/rankall.R')
x=rankall('heart attack')
View(x)
source('~/GitHub/Programming/R/rankhospital1.R')
states = c()
hospitals = c()
for(i in state)
{
x = rankhospital1(i, outcome, num)
states = c(states, x$state)
hospitals = c(hospitals, x$hospital)
}
data.frame(hospital = hospitals, state = states)
outcome = "heart attack"
for(i in state)
{
x = rankhospital1(i, outcome, num)
states = c(states, x$state)
hospitals = c(hospitals, x$hospital)
}
data.frame(hospital = hospitals, state = states)
num = 1
for(i in state)
{
x = rankhospital1(i, outcome, num)
states = c(states, x$state)
hospitals = c(hospitals, x$hospital)
}
data.frame(hospital = hospitals, state = states)
states = c()
hospitals = c()
x = rankhospital1(i, outcome, num)
states = c(states, x$state)
hospitals = c(hospitals, x$hospital)
states = c()
hospitals = c()
source('~/GitHub/Programming/R/rankall.R')
x=rankall('heart attack')
x
x=rankall('heart attack', 20)
x
submit()
submit()
submit()
