Unique(t)
Unique(x)
y = Unique(x)
y
sort(y)
rm(y)
y = Unique(x)
Unique(y)
Unique(t)
input =y
input = t
output <- list()
for(i in input){
if(!any(output == i)){  #if the value is not in 'output'
output[count] <- i #add it to the output
count <- count + 1 #and increment counter
}
else{} #Otherwise, do nothing
}
count = 1
rm(i)
output <- list()
for(i in input){
if(!any(output == i)){  #if the value is not in 'output'
output[count] <- i #add it to the output
count <- count + 1 #and increment counter
}
else{} #Otherwise, do nothing
}
input
source('~/unique.R')
Unique(i)
Unique(x)
Unique(t)
rm(i)
rm(count)
rm(input)
rm(output)
Unique(t)
Unique(x)
source('~/unique.R')
Unique(x)
Unique(t)
source('~/unique.R')
Unique(x)
Unique(t)
source('~/unique.R')
Unique(t)
source('~/unique.R')
Unique(t)
any(t == 1)
any(t == "1")
?any
all(x==1)
source('~/unique.R')
Unique(t)
source('~/unique.R')
Unique(t)
source('~/unique.R')
Unique(t)
Unique(t)
source('~/unique.R')
source('~/unique.R')
Unique(x)
source('~/unique.R')
Unique(x)
source('~/unique.R')
source('~/unique.R')
Unique(x)
source('~/unique.R')
Unique(x)
source('~/unique.R')
Unique(x)
source('~/unique.R')
Unique(x)
Unique(t)
!any(x == 2)
!any(x == 10)
!any(t == 10)
!any(t == '10')
!any(t == 'asdf')
!any(t == a)
!any(t == 2)
with(t, exists(2))
with(t, exists('2'))
?exists
source('~/unique.R')
Unique(x)
t
u <- list("0")
for (tItem in t){
for (uItme in u){
if(t == u)
}}
source('~/unique.R')
Unique(x)
source('~/unique.R')
Unique(x)
x = C("a", "b", "c", "d", "e")
x = c("a", "b", "c", "d", "e")
Unique(x)
x = c("a", "b", "c", "d", "e", "a")
Unique(x)
source('~/unique.R')
Unique(x)
Unique(t)
t
source('~/unique.R')
x[x=="b"]
x
x[x=="a"]
x[x==2]
x <- x[which(x=="a")]
x
x = c("a", "b", "c", "d", "e", "a")
x <- x[-which(x=="a")]
x
x = c("a", "b", "c", "d", "e", "a")
x <- x[-(x=="a")]
x
x <- x[-which(x=="a")]
x
source('~/unique.R')
Unique(x)
source('~/unique.R')
Unique(x)
x = c(2,2,5,9,8,7,4,6,3,2,4,5,8,6,7,4,1,2,3,6,9,8,7,4,1,2,5,6,4,7,8,9,5,4,1,2,3,6,5)
Unique(x)
source('~/unique.R')
Unique(x)
Unique(t)
t = c(t, 2)
t
Unique(t)
source('~/unique.R')
Unique(t)
?which
output = list()
rm(output)
a = aoutput
a = list()
for (i in t){
if(length(output[output==i])==0){
for (i in t){
for (i in t){}}}}
rm(i)
for(i in t){
if(length(a[a==i]) == 0){
a <- c(a, i)
}
}
a
a = list()
a
rm(i)
for(i in t){
print(as.char(i))
}
?as.character
rm(b)
rm(i)
u
rm(u)
y
rm(y)
source('~/unique.R')
unique(x)
unique(t)
source('~/unique.R')
unique(x)
unique(t)
sort(x, decending=decending)
sort(x, decreasing = decreasing)
sort(x, decreasing = decreasing)
sort(x, decreasing = T)
sort(Unique(x)
, decreasing = T)
sort(Unique(x), decreasing = T)
sort(Unique(x), decreasing = T)
y  = Unique(x)
sort(y, decreasing=T)
y
g = vector()
g = vector(numeric)
g = vector('numeric')
class g
class(g)
source('~/unique.R')
source('~/unique.R')
Unique
Unique(x)
Unique(t)
sort(Unique(x), decreasing=T)
sort(Unique(x), decreasing=F)
source('~/unique.R')
source('~/unique.R')
Unique(x)
Unique(t)
Unique(y)
rm(ls())
ls()
for( i in ls()){
rm(i)
}
rm(a)
rm(g)
rm(t)
rm(x)
rm(y)
lapply()
x = list(a=1:5, b=rnorm(10))
lapply(x, mean)
lapply(x, mean)$a
lapply(x, mean)
y = lapply(x, mean)
class(y)
y
rm(y)
x = list(a=matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x
lapply(x, function(y) y[,1])
x <- list(rnorm(100), runif(100), rpois(100, 1))
sapply(x, quantile, probs = c(0.25, 0.75))
y = sapply(x, quantile, probs = c(0.25, 0.75))
class y
class(y)
summary(y)
str(y)
x = matrix(rnorm(200), 20, 10)
x
apply(x, 2, mean)
apply(x, , mean)
apply(x, 1, mean)
colMeans(x)
gl?
?
)()
help(gl)
y = airquality
s = split(airquality, airquality$Month)
s
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
help(tapply)
deparse('help(tapply)')
as.charachter(help(tapply))
as.charachter("help(tapply)")
as.char("help(tapply")
as.char("help(tapply)")
as.character("help(tapply)")
x = as.character("help(tapply)")
deparse(x)
x
help(as.character)
help(split)
message("What do you think you are doing?")
print("What do you think you are doing?")
source(unique.R)
source("unique.R")
debug(Unique)
Unique(list("a", 2, c(1,2,3,4,5,6,7), c(1,2,3,4,5,6,7), 5, 7, NA, 8, 4))
print("This is a line\nThis is another line")
print("This is a line/nThis is another line")
cat("This is a line\nThis is another line")
message(cat("This is a line\nThis is another line"))
message("This is a line\nThis is another line")
mean(x)
traceback()
mean(x)
traceback()
mena(-1)
traceback
traceback()
mena(-1)
traceback()
traceback
cube <- function(x, n) {
x^3
}
cube(3)
pow <- function(x = 4, n = 3) {
x^n
}
pwq()
pow()
x <- 1:10
if(x > 5) {
x <- 0
}
data(iris)
?iris
iris.S = iris$Sepal.Length
head(iris)
iris.S = iris[Species == 'virginica']
iris.S = iris[iris$Species == 'virginica']$Sepal.Length
iris.S = iris[iris$Species == 'virginica', ]$Sepal.Length
mean(iris.S)
iris.S
colMeans(iris)
apply(iris, 1, mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
str(iris)
summary(iris)
mtcars = mtcars
rm(mtcars)
?mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
82.63636-209.21429
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(2)
f(3)
source('~/getmonitor.R')
getmonitor(1)
getmonitor(c(100,9))
source('~/getmonitor.R')
getmonitor(c(100,9))
error('this')
stop('this')
source('~/getmonitor.R')
getmonitor(c(100,9))
source('~/getmonitor.R')
getmonitor(0)
source('~/getmonitor.R')
getmonitor(0)
getmonitor(0)
as.integer(1.3)
as.integer(1.8)
source('~/getmonitor.R')
getmonitor("0.8")
getmonitor("5.8")
length("How are you")
source('~/getmonitor.R')
source('~/getmonitor.R')
getmonitor("5.8")
getmonitor("5.8", "")
getmonitor("5.8", " ")
source('~/getmonitor.R')
getmonitor("5.8", " ")
source('~/getmonitor.R')
getmonitor("5.8", " ")
getmonitor("15.8", " ")
source('~/getmonitor.R')
getmonitor("15.8", " ")
help(paste)
source('~/getmonitor.R')
help(paste)
getmonitor("15.8", " ")
getmonitor("15.8", "specdata\")
\
)
()
((((())
getmonitor("15.8", " ")
getmonitor("15.8", "specdata\\")
load.csv(getmonitor(15, "specdata\\"))
read.csv(getmonitor(15, "specdata\\"))
x =read.csv(getmonitor(15, "specdata\\"))
class(x)
source('~/getmonitor.R')
source('~/getmonitor.R')
x <- getmonitor(2, "specdata\\", TRUE)
x <- getmonitor(2, "specdata\\", summarize=TRUE)
source('~/getmonitor.R')
x <- getmonitor(2, "specdata\\", TRUE)
source('~/getmonitor.R')
x <- getmonitor(2, "specdata\\", TRUE)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source('~/getmonitor.R')
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
traceback()
summary(data$sulfate)
fix(getmonitor.testscript)
x
source('~/getmonitor.R')
getmonitor.testscript()
source('~/getmonitor.R')
sapply(split(mtcars$hp, mtcars$cyl), mean)
x = sapply(split(mtcars$hp, mtcars$cyl), mean)
class(x)
split(mtcars$hp, mtcars$cyl)
split(mtcars$hp, mtcars$cyl == 4 | mtcars$cyl == 8)
split(mtcars$hp, mtcars$cyl = 4)
split(mtcars$hp, mtcars$cyl == 4)
split(mtcars$hp, mtcars$cyl$4)
split(mtcars$hp, mtcars$cyl$`4`)
split(mtcars$hp, mtcars$cyl$"4")
split(mtcars$hp, mtcars$cyl == 4)
sapply(split(mtcars$hp, mtcars$cyl == 4), mean)
x = sapply(split(mtcars$hp, mtcars$cyl == 4), mean)
x$True
x = sapply(split(mtcars$hp, mtcars$cyl == 4), mean)
x = sapply(split(mtcars$hp, names(mtcars$cyl)) = 4, mean)
x = sapply(split(mtcars$hp, names(mtcars$cyl)) == 4, mean)
x = sapply(split(mtcars$hp, mtcars$cyl, mean)
)
x = sapply(split(mtcars$hp, mtcars$cyl), mean)
class(x)
data.frame(x)
y = data.frame(x)
cbind(x)
y
class(cbind(x))
y$4
y$'4'
y
rbind(x)
y = data.frame(rbind(x))
y
y = data.frame(rbind(sapply(split(mtcars$hp, mtcars$cyl), mean)))
y
rm(x)
rm(y)
y
y = data.frame(rbind(sapply(split(mtcars$hp, mtcars$cyl), mean)))
y
rbind(sapply(split(mtcars$hp, mtcars$cyl), mean))
as.dataframe
?as.data.frame
as.data.frame(rbind(sapply(split(mtcars$hp, mtcars$cyl), mean)), c(4,6,8))
x = as.data.frame(rbind(sapply(split(mtcars$hp, mtcars$cyl), mean)))
x
mtcars
sapply(split(mtcars$hp, mtcars$cyl), mean)
x = as.data.frame(rbind(sapply(split(mtcars$hp, mtcars$cyl), mean)))
x
x$4 - x$8
x$'4' - x$'8'
source('~/getmonitor.R')
getmonitor(2,"specdata")
x = as.data.frame(rbind(sapply(split(mtcars$hp, mtcars$cyl), mean)))
x
x = as.data.frame(sapply(split(mtcars$hp, mtcars$cyl), mean))
x
x = as.data.frame(rbind(sapply(split(mtcars$hp, mtcars$cyl), mean)))
x
class(x)
abs(-2)
abs(x$'4'-x$'8')
source('~/abs4And8CylCars.R')
source('~/abs4And8CylCars.R')
source('~/abs4And8CylCars.R')
fix(abs4And8CylCars)
abs4And8CylCars()
source('~/abs4And8CylCars.R')
abs4And8CylCars()
serialize?
()
?serialize
?jpeg
?xfig
?jpeg
?postscript
plot()
plot(1,1)
options(device)
?splom
?histogram
?bwplot
?boxplot
?plot
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?xyplto
?xyplot
xyplot(weight ~ Time | Diet, BodyWeight)
?mtext
?panel.xyplot
expression("theta")
expression(theta)
plot(0, 0, main = expression(theta))
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
?text
windows()
jpeg()
save()
?hist
?lines
?mtext
setwd("~/GitHub/Programming/R")
outcome1 = read.csv("outcome-of-care-measures.csv",
colClasses="character")
rstudio::viewData(outcome1)
